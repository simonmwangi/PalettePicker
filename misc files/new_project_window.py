#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Mar 01, 2023 10:23:44 AM +03  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import new_project_window_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40'  # X11 color: #666666
_ana1color = '#c3c3c3'  # Closest X11 color: 'gray76'
_ana2color = 'beige'  # X11 color: #f5f5dc
_tabfg1 = 'black'
_tabfg2 = 'black'
_tabbg1 = 'grey75'
_tabbg2 = 'grey89'
_bgmode = 'light'

_style_code_ran = 0


def _style_code():
    global _style_code_ran
    if _style_code_ran:
        return
    style = ttk.Style()
    if sys.platform == "win32":
        style.theme_use('winnative')
    style.configure('.', background=_bgcolor)
    style.configure('.', foreground=_fgcolor)
    style.configure('.', font='TkDefaultFont')
    style.map('.', background=
    [('selected', _compcolor), ('active', _ana2color)])
    if _bgmode == 'dark':
        style.map('.', foreground=
        [('selected', 'white'), ('active', 'white')])
    else:
        style.map('.', foreground=
        [('selected', 'black'), ('active', 'black')])
    _style_code_ran = 1


from PIL import ImageTk


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("688x450+277+59")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("Palette-Hive 1.0.0.")
        top.configure(background="#0d0d0d")

        self.top = top
        self.combobox = tk.StringVar()

        self.Canvas1 = tk.Canvas(self.top)
        self.Canvas1.place(relx=0.201, rely=0.0, relheight=1.584, relwidth=2.077)


        self.Canvas1.configure(background="#191919")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief="ridge")
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        _style_code()
        self.TLabelframe1 = ttk.Labelframe(self.Canvas1)
        self.TLabelframe1.place(relx=0.007, rely=0.043, relheight=0.526
                                , relwidth=0.074)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''My-Palette''')
        self.TLabel2 = ttk.Label(self.Canvas1)
        self.TLabel2.place(relx=0.21, rely=0.028, height=19, width=224)
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief="solid")
        self.TLabel2.configure(anchor='w')
        self.TLabel2.configure(justify='center')
        self.TLabel2.configure(text='''My Workspace''')
        self.TLabel2.configure(compound='center')
        self.Canvas2 = tk.Canvas(self.top)
        self.Canvas2.place(relx=0.0, rely=0.0, relheight=0.996, relwidth=0.217)
        self.Canvas2.configure(background="#ffffff")
        self.Canvas2.configure(borderwidth="2")
        self.Canvas2.configure(insertbackground="black")
        self.Canvas2.configure(relief="ridge")
        self.Canvas2.configure(selectbackground="#c4c4c4")
        self.Canvas2.configure(selectforeground="black")
        self.Label1 = tk.Label(self.Canvas2)
        self.Label1.place(relx=0.047, rely=0.042, height=25, width=141)
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(compound='left')
        self.Label1.configure(cursor="arrow")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {System} -size 10 -weight bold")
        self.Label1.configure(foreground="#000000")
        # photo_location = os.path.join(_location,"../../../Pictures/toolbox.jpg")
        # global _img0
        _img0 = ImageTk.PhotoImage(file="../test_images/batman.png")
        self.Label1.configure(image=_img0)
        self.Label1.configure(text='''My Tools''')
        self.add_image = tk.Button(self.Canvas2)
        self.add_image.place(relx=0.054, rely=0.156, height=34, width=107)
        self.add_image.configure(activebackground="beige")
        self.add_image.configure(activeforeground="black")
        self.add_image.configure(anchor='w')
        self.add_image.configure(background="#d9d9d9")
        self.add_image.configure(compound='left')
        self.add_image.configure(disabledforeground="#a3a3a3")
        self.add_image.configure(foreground="#000000")
        self.add_image.configure(highlightbackground="#d9d9d9")
        self.add_image.configure(highlightcolor="black")
        self.add_image.configure(pady="0")
        self.add_image.configure(text='''Add Image''')
        self.close_images = tk.Button(self.Canvas2)
        self.close_images.place(relx=0.074, rely=0.268, height=34, width=107)
        self.close_images.configure(activebackground="beige")
        self.close_images.configure(activeforeground="black")
        self.close_images.configure(background="#d9d9d9")
        self.close_images.configure(compound='left')
        self.close_images.configure(disabledforeground="#a3a3a3")
        self.close_images.configure(foreground="#000000")
        self.close_images.configure(highlightbackground="#d9d9d9")
        self.close_images.configure(highlightcolor="black")
        self.close_images.configure(pady="0")
        self.close_images.configure(text='''Close Images''')
        self.TCombobox1 = ttk.Combobox(self.Canvas2)
        self.TCombobox1.place(relx=0.067, rely=0.435, relheight=0.045
                              , relwidth=0.664)
        self.value_list = ['A,', 'B', ',', 'C', ]
        self.TCombobox1.configure(values=self.value_list)
        self.TCombobox1.configure(textvariable=self.combobox)
        self.TCombobox1.configure(takefocus="")
        self.TCombobox1.configure(cursor="hand2")
        self.TLabel1 = ttk.Label(self.Canvas2)
        self.TLabel1.place(relx=0.054, rely=0.379, height=19, width=97)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(anchor='w')
        self.TLabel1.configure(justify='left')
        self.TLabel1.configure(text='''Save Palette:''')
        self.TLabel1.configure(compound='left')
        self.TButton1 = ttk.Button(self.Canvas2)
        self.TButton1.place(relx=0.268, rely=0.938, height=25, width=76)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Quit''')
        self.TButton1.configure(compound='left')


def start_up():
    new_project_window_support.main()


if __name__ == '__main__':
    new_project_window_support.main()
